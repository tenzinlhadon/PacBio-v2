quit
quit()
exit
exit()
quit
quit()
import pandas as pd
df = pd.read_csv("Band2a_primary_aligned_counts.tmp.csv")
df = pd.read_csv("Band2a.ccs_primary_aligned_counts.tmp.csv")
df.head()
quit()
import glob
glob.glob("*annotation.txt")
sample = gglob.glob("*annotation.t[0]).split("_annotation.txt")[0]
sample = (glob.gl(ob("*annotation.txt")[0]).split("_annotation.txt"))[0]
sample = (glob.glob("*annoation.txt")[0]).split("_annotation.txt")[0]
sample = (glob.glob("*annoation.ttation.txt")[0]).split("_annotation.txt")[0]
sample = (glob.glob("*annotation.txt")[0]).split("_annotation.txt")[0]
print(sample)
quit()
import pandas as pd
df = pd.read_csv("read_length.txt")
df.head()
df[1].max()
max(df[1])
df = pd.read_csv("read_length.txt", header = None, delim_whitespace=True)
df[2].heda()
df[2].head()
max(df[1])
quit()
import pandas as pd
df = pd.read_csv("read_length.txt")
df.head()
sum(i > 5000 for i in df[0])
x = df[0]
df = pd.read_csv("read_length.txt", header = None, delim_whitespace=True)
x = df[0]
sum(i > 5000 for i in df[0])
quit()
df = pd.read_csv("read_length.txt", header = None, delim_whitespace=True)
import pandas as pd
df = pd.read_csv("read_length.txt", header = None, delim_whitespace=True)
df[0].sum()
quit()
import pandas as pd 
df = pd.read_csv("sample_2_read_length_aligned.txt", sep = "\t", header = False)
df = pd.read_csv("sample_2_read_length_aligned.txt", sep = "\t", header = None)
df.head()
df[0].value_counts(bins=1000, sort=False)
df[0].df_count = value_counts(bins=1000, 22=False)
df[0].value_counts(ts(bins = 22, sep ="\t", header = None")
df[0].value_counts(ts(bins = 22, sep ="\t", header = None)
;
df[0].value_counts(bins = 22, sep = "\t", header = None)
df[0].value_counts(bins = 22)
sum(i > 5000 for i in df[0]);
quit()
from tabulate import tabulate
exit()
from tabulate import tabulate
exit()
hi="hello"
hey=hi.split("el")[0]
print(hey)
quit
quit()
df_alignment_metrics
df_alignment_metrics.loc[len(df_alignment_metrics)] = ref_length_list 
with open('ref_lengths.txt') as f:
   ref_length_list = [int(line.split()[0]) for line in f]
df_alignment_metrics.loc[len(df_alignment_metrics)] = ref_length_list 
ref_length_list
with open('ref_lengths.txt') as f:
   ref_length_list = [int(line.split()[0]) for line in f]
ref_length_list 
import csv
with open ('ref_lengths.txt', 'rb') as f:
    ref_length_list [row[0] for row in csv.reader(f, delimiter=' ')]
quit()
alignment_metrics = sample + "_alignment_metrics_per_ref.stats"
df_alignment_metrics = pd.read_csBand2a.ccs_sampled_v(alignment_metri_per_ref.stats"cs, sep="\t")
df_alignment_metrics = pd.read_csv("Band2a.ccs_sampled_alignment_metrics_per_ref.stats, sep = "\t")
quit()
import pandas as pd 
pd.read_csv("combined_annotaion.py", sep="\t", header = None)
pd.read_csv("combined_annotaion.bed ", sep="\t", header = None)
pd.read_csv("combined_annotaion.bed", sep="\t", header = None)
pd.read_csv("combined_annotation.bed", sep="\t", header = None)
annotaion = pd.read_csv("combined_annotation.bed", sep="\t", header = None)
annotaiton.heda()
annotaion =;
annotation = pd.read_csv("combined_annotation.bed", sep="\t", header = None)
annotation.head()
df[4] = df[0] + "-" + df[3]
annotation[4] = annotation[0] + "-" + annotation[3]
annotation.head()
quit()
df_annotated.head()
quit()
